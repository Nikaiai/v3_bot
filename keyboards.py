# keyboards.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from database import get_db, Category, Order, OrderStatus
from utils import is_cafe_open  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∞–π–ª utils.py


# ================================================================
# –ö–õ–ê–í–ò–ê–¢–£–†–´ –ì–õ–ê–í–ù–û–ì–û –ò –ê–î–ú–ò–ù–°–ö–û–ì–û –ú–ï–ù–Æ
# ================================================================


def main_menu_keyboard(is_admin: bool = False):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å, –µ—Å–ª–∏ is_admin=True.
    """
    keyboard = [
        [InlineKeyboardButton("üçΩÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é", callback_data="show_menu")],
        [InlineKeyboardButton("üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart")],
        [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")]
    ]
    if is_admin:
        keyboard.append([InlineKeyboardButton("üëë –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel")])
    return InlineKeyboardMarkup(keyboard)


def admin_menu_keyboard():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    db = next(get_db())
    new_orders_count = db.query(Order).filter(Order.status == OrderStatus.NEW).count()
    db.close()

    text = f"üìã –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã ({new_orders_count})" if new_orders_count > 0 else "üìã –ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç"

    keyboard = [
        [InlineKeyboardButton(text, callback_data=f"admin_view_orders_{OrderStatus.NEW}")],
        [InlineKeyboardButton("–í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_view_orders_ALL")],
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –±–ª—é–¥–æ", callback_data="admin_add_item")],
        [InlineKeyboardButton("‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞", callback_data="start_user_menu")],
    ]
    return InlineKeyboardMarkup(keyboard)


# ================================================================
# –û–°–ù–û–í–ù–ê–Ø –ö–õ–ê–í–ò–ê–¢–£–†–ê –ú–ï–ù–Æ (–° –ü–û–î–î–ï–†–ñ–ö–û–ô –ü–û–î–ö–ê–¢–ï–ì–û–†–ò–ô)
# ================================================================

def menu_keyboard(category_id=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ–Ω—é —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏.
    """
    db = next(get_db())
    if category_id is None:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = db.query(Category).filter(Category.parent_id.is_(None)).all()
        keyboard = [[InlineKeyboardButton(cat.name, callback_data=f"category_{cat.id}")] for cat in categories]
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="start")])
    else:
        current_category = db.query(Category).get(category_id)
        keyboard = []
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ —Ç–æ–≤–∞—Ä—ã
        if current_category.subcategories:
            for sub in current_category.subcategories:
                keyboard.append([InlineKeyboardButton(sub.name, callback_data=f"category_{sub.id}")])
        elif current_category.items:
            for item in current_category.items:
                keyboard.append(
                    [InlineKeyboardButton(f"{item.name} ({item.price} —Ä—É–±.)", callback_data=f"item_{item.id}")])

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if current_category.parent_id is None:
            keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="show_menu")])
        else:
            keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"category_{current_category.parent_id}")])

    db.close()
    return InlineKeyboardMarkup(keyboard)


def item_details_keyboard(item_id: int, quantity: int = 1, is_admin: bool = False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞."""
    if quantity < 1: quantity = 1

    keyboard = [
        [
            InlineKeyboardButton("‚ûñ", callback_data=f"item_decr_{item_id}_{quantity - 1}"),
            InlineKeyboardButton(f"{quantity} —à—Ç.", callback_data="noop"),
            InlineKeyboardButton("‚ûï", callback_data=f"item_incr_{item_id}_{quantity + 1}")
        ]
    ]
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–∞—Ñ–µ –æ—Ç–∫—Ä—ã—Ç–æ –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω
    if is_cafe_open() or is_admin:
        keyboard.append([InlineKeyboardButton(f"üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É ({quantity})",
                                              callback_data=f"cart_add_many_{item_id}_{quantity}")])

    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"item_back_{item_id}")])
    return InlineKeyboardMarkup(keyboard)


# ================================================================
# –ö–õ–ê–í–ò–ê–¢–£–†–´ –ö–û–†–ó–ò–ù–´ –ò –ó–ê–ö–ê–ó–û–í
# ================================================================

def cart_actions_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –≤ –∫–æ—Ä–∑–∏–Ω–µ."""
    keyboard = []
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
    if is_cafe_open():
        keyboard.append([InlineKeyboardButton("‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é", callback_data="place_order")])

    keyboard.extend([
        [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="show_menu")],
    ])
    return InlineKeyboardMarkup(keyboard)


def confirm_order_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üëç –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="confirm_order")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data="cart")]
    ])


# ================================================================
# –ö–õ–ê–í–ò–ê–¢–£–†–´ –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
# ================================================================

def admin_order_keyboard(order_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∑–∞–∫–∞–∑–æ–º."""
    keyboard = [
        [InlineKeyboardButton("‚úîÔ∏è –ì–æ—Ç–æ–≤–∏—Ç—Å—è", callback_data=f"admin_status_{order_id}_{OrderStatus.IN_PROGRESS}")],
        [InlineKeyboardButton("‚úÖ –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ", callback_data=f"admin_status_{order_id}_{OrderStatus.READY}")],
        [InlineKeyboardButton("üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"admin_status_{order_id}_{OrderStatus.COMPLETED}")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"admin_status_{order_id}_{OrderStatus.CANCELLED}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=f"admin_view_orders_{OrderStatus.NEW}")],
    ]
    return InlineKeyboardMarkup(keyboard)


def cancel_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –¥–∏–∞–ª–æ–≥–µ)."""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_action")]
    ])